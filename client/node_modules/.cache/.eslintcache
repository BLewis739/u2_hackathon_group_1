[{"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/index.js":"1","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/App.js":"2","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/Home.js":"3","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/Header.js":"4","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/About.js":"5","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/Parkscard.js":"6","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/Ridecard.js":"7","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/Search.js":"8","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/ViewPark.js":"9","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/CreateRide.js":"10","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/CreatePark.js":"11","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/ViewRide.js":"12"},{"size":312,"mtime":1648134150189,"results":"13","hashOfConfig":"14"},{"size":904,"mtime":1648187301976,"results":"15","hashOfConfig":"14"},{"size":2416,"mtime":1648220263874,"results":"16","hashOfConfig":"14"},{"size":487,"mtime":1648182011382,"results":"17","hashOfConfig":"14"},{"size":424,"mtime":1648150319366,"results":"18","hashOfConfig":"14"},{"size":579,"mtime":1648184004393,"results":"19","hashOfConfig":"14"},{"size":321,"mtime":1648184532999,"results":"20","hashOfConfig":"14"},{"size":402,"mtime":1648184118782,"results":"21","hashOfConfig":"14"},{"size":1930,"mtime":1648185811867,"results":"22","hashOfConfig":"14"},{"size":1779,"mtime":1648219204421,"results":"23","hashOfConfig":"14"},{"size":1908,"mtime":1648218048689,"results":"24","hashOfConfig":"14"},{"size":1099,"mtime":1648187365266,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"asszup",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/index.js",[],[],["67","68"],"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/App.js",[],[],"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/Home.js",["69"],[],"import React from 'react'\nimport ParksCard from '../components/Parkscard'\nimport RideCard from '../components/Ridecard'\nimport Search from '../components/Search'\nimport axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n  const [parks, setParks] = useState([])\n  const [searchResult, setSearchResult] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [searched, setSearched] = useState(false)\n\n  useEffect(() => {\n    const getParks = async () => {\n      const res = await axios.get(`http://localhost:3001/parks`)\n      setParks(res.data)\n      console.log(res)\n    }\n    getParks()\n  }, [])\n\n  const getSearchResult = async (e) => {\n    e.preventDefault()\n    const res = await axios.get(`http://localhost:3001/parks/`)\n    const searchedParks = res.data.filter((item) => {\n      return item.name.includes(`${searchQuery}`)\n    })\n    setSearchQuery('')\n    setSearched(true)\n    setSearchResult(searchedParks)\n  }\n\n  const handleChange = (e) => {\n    setSearchQuery(e.target.value)\n    console.log(e.target.value)\n  }\n\n  return (\n    <div>\n      <div className=\"search\">\n        <Search\n          onChange={handleChange}\n          value={searchQuery}\n          onSubmit={getSearchResult}\n        />\n      </div>\n      <div className=\"content\">\n        {!searched && <h1>Trending Park</h1>}\n        {searched && <h1>Search Result</h1>}\n        <div className=\"trending\">\n          {!searched &&\n            parks.slice(0, 3).map((park, index) => (\n              <Link\n                className=\"viewPage\"\n                to={`/parks/${park._id}`}\n                key={park._id}\n              >\n                <ParksCard image={park.img} {...park} />\n              </Link>\n            ))}\n          {searched &&\n            searchResult.map((item) => (\n              <Link to={`/parks/${item._id}`} key={item._id}>\n                <ParksCard image={item.img} {...item} />\n              </Link>\n            ))}\n        </div>\n      </div>\n      {/* <div className=\"categories\">\n        <h2>Park Categories</h2>\n        <section>\n          {parks.slice(0, 3).map((park) => (\n            <Link to={`/park/details/${park.id}`} key={park._id}>\n              <ParksCard image={park.background_image} {...park} />\n            </Link>\n          ))}\n        </section>\n      </div> */}\n    </div>\n  )\n}\n\nexport default Home\n","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/Header.js",[],[],"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/About.js",[],[],"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/Parkscard.js",["70","71"],[],"const ParksCard = (props) => {\n  let color\n\n  switch (props.category) {\n    case 'Kids':\n      color = 'purple'\n      break\n    case 'Amusement':\n      color = 'green'\n      break\n    case 'Water':\n      color = 'blue'\n      break\n  }\n\n  return (\n    <div className=\"parkcards\" onClick={props.onClick}>\n      <div className=\"img-wrapper\">\n        <img src={props.img}></img>\n      </div>\n      <div className=\"parkcards-info\">\n        <h3>{props.name}</h3>\n        <p style={{ backgroundColor: color }}>{props.category}</p>\n      </div>\n    </div>\n  )\n}\nexport default ParksCard\n","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/Ridecard.js",[],[],"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/Search.js",[],[],"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/ViewPark.js",["72","73","74","75"],[],"import React from 'react'\nimport ParksCard from '../components/Parkscard'\nimport { useParams, Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport RideCard from '../components/Ridecard'\n\nconst ViewPark = (props) => {\n  let { id } = useParams()\n  const [parkDetail, setParkDetails] = useState({})\n  const [rides, setRides] = useState([])\n\n  useEffect(() => {\n    const getParkDetails = async () => {\n      const res = await axios.get(`http://localhost:3001/parks/${id}`)\n\n      setParkDetails(res.data)\n    }\n    getParkDetails()\n  }, [id])\n\n  useEffect(() => {\n    const getRide = async () => {\n      const res = await axios.get(`http://localhost:3001/rides`)\n      setRides(res.data)\n    }\n    getRide()\n  }, [parkDetail])\n\n  const parkRides = rides.filter((ride) => {\n    if (ride.park === parkDetail.name) {\n      return ride\n    }\n  })\n\n  let color\n  switch (parkDetail.category) {\n    case 'Kids':\n      color = 'purple'\n      break\n    case 'Amusement':\n      color = 'green'\n      break\n    case 'Water':\n      color = 'blue'\n      break\n  }\n\n  return (\n    <div park-content>\n      <div>\n        <div className=\"parkImage\">\n          <img src={parkDetail.img} alt=\"image\"></img>\n          <div className=\"discription\">\n            <h3 style={{ backgroundColor: color }}>{parkDetail.category}</h3>\n            <h1>{parkDetail.name}</h1>\n            <p>{parkDetail.description}</p>\n            <p className=\"parkopened\">Park Opened: {parkDetail.yearOpened}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"parkRides\">\n        <h1>Rides</h1>\n        <div className=\"rides\">\n          {parkRides.map((ride) => (\n            <Link className=\"rideLink\" to={`/rides/${ride._id}`} key={ride._id}>\n              <RideCard img={ride.img} {...ride} />\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewPark\n","/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/CreateRide.js",[],[],"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/components/CreatePark.js",[],[],["76","77"],"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/ViewRide.js",[],[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":4,"column":3,"nodeType":"88","messageId":"89","endLine":14,"endColumn":4},{"ruleId":"90","severity":1,"message":"91","line":19,"column":9,"nodeType":"92","endLine":19,"endColumn":30},{"ruleId":"82","severity":1,"message":"93","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":30,"column":41,"nodeType":"96","messageId":"97","endLine":30,"endColumn":43},{"ruleId":"86","severity":1,"message":"87","line":37,"column":3,"nodeType":"88","messageId":"89","endLine":47,"endColumn":4},{"ruleId":"98","severity":1,"message":"99","line":53,"column":11,"nodeType":"92","endLine":53,"endColumn":49},{"ruleId":"78","replacedBy":"100"},{"ruleId":"80","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'RideCard' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ParksCard' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["102"],["103"],"no-global-assign","no-unsafe-negation"]