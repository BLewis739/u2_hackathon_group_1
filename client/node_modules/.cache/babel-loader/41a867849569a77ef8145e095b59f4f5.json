{"ast":null,"code":"var _jsxFileName = \"/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/ViewPark.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ParksCard from '../components/Parkscard';\nimport { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RideCard from '../components/Ridecard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewPark = props => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [parkDetail, setParkDetails] = useState({});\n  const [rides, setRides] = useState([]);\n  useEffect(() => {\n    const getParkDetails = async () => {\n      const res = await axios.get(`http://localhost:3001/parks/${id}`);\n      setParkDetails(res.data);\n    };\n\n    getParkDetails();\n  }, [id]);\n  useEffect(() => {\n    const getRide = async () => {\n      const res = await axios.get(`http://localhost:3001/rides`);\n      setRides(res.data);\n    };\n\n    getRide();\n  }, [parkDetail]);\n  const parkRides = rides.filter(ride => {\n    if (ride.park === parkDetail.name) {\n      return ride;\n    }\n  });\n  let color;\n\n  switch (props.category) {\n    case 'Kids':\n      color = 'purple';\n      break;\n\n    case 'Amusement':\n      color = 'green';\n      break;\n\n    case 'Water':\n      color = 'blue';\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"park-content\": true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parkImage\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: parkDetail.img,\n          alt: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"discription\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              backgroundColor: color\n            },\n            children: parkDetail.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: parkDetail.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: parkDetail.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"parkopened\",\n            children: [\"Park Opened: \", parkDetail.yearOpened]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parkRides\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rides\",\n        children: parkRides.map(ride => /*#__PURE__*/_jsxDEV(Link, {\n          className: \"rideLink\",\n          to: `/rides/${ride._id}`,\n          children: /*#__PURE__*/_jsxDEV(RideCard, {\n            img: ride.img,\n            ...ride\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, ride._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewPark, \"qKMdLwTT2bTtMmkLPZbD8PxkaXI=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewPark;\nexport default ViewPark;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPark\");","map":{"version":3,"sources":["/Users/huanzeng/ga_seir/unit2/Homework/u2_hackathon_group_1/client/src/pages/ViewPark.js"],"names":["React","ParksCard","useParams","Link","useState","useEffect","axios","RideCard","ViewPark","props","id","parkDetail","setParkDetails","rides","setRides","getParkDetails","res","get","data","getRide","parkRides","filter","ride","park","name","color","category","img","backgroundColor","description","yearOpened","map","_id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ParksCard from '../components/Parkscard'\nimport { useParams, Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport RideCard from '../components/Ridecard'\n\nconst ViewPark = (props) => {\n  let { id } = useParams()\n  const [parkDetail, setParkDetails] = useState({})\n  const [rides, setRides] = useState([])\n\n  useEffect(() => {\n    const getParkDetails = async () => {\n      const res = await axios.get(`http://localhost:3001/parks/${id}`)\n\n      setParkDetails(res.data)\n    }\n    getParkDetails()\n  }, [id])\n\n  useEffect(() => {\n    const getRide = async () => {\n      const res = await axios.get(`http://localhost:3001/rides`)\n      setRides(res.data)\n    }\n    getRide()\n  }, [parkDetail])\n\n  const parkRides = rides.filter((ride) => {\n    if (ride.park === parkDetail.name) {\n      return ride\n    }\n  })\n\n  let color\n\n  switch (props.category) {\n    case 'Kids':\n      color = 'purple'\n      break\n    case 'Amusement':\n      color = 'green'\n      break\n    case 'Water':\n      color = 'blue'\n      break\n  }\n\n  return (\n    <div park-content>\n      <div>\n        <div className=\"parkImage\">\n          <img src={parkDetail.img} alt=\"image\"></img>\n          <div className=\"discription\">\n            <h3 style={{ backgroundColor: color }}>{parkDetail.category}</h3>\n            <h1>{parkDetail.name}</h1>\n            <p>{parkDetail.description}</p>\n            <p className=\"parkopened\">Park Opened: {parkDetail.yearOpened}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"parkRides\">\n        <h1>Rides</h1>\n        <div className=\"rides\">\n          {parkRides.map((ride) => (\n            <Link className=\"rideLink\" to={`/rides/${ride._id}`} key={ride._id}>\n              <RideCard img={ride.img} {...ride} />\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewPark\n"]},"metadata":{},"sourceType":"module"}